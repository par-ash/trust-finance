{
  "abi": [
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementCreated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "penaltyAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "bondAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "AgreementLiquidatedBy",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "rewardAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        },
        {
          "indexed": false,
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        }
      ],
      "name": "AgreementLiquidatedV2",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        }
      ],
      "name": "AgreementStateUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        }
      ],
      "name": "AgreementTerminated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "indexed": false,
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "AgreementUpdated",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "bailoutAccount",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "bailoutAmount",
          "type": "uint256"
        }
      ],
      "name": "Bailout",
      "type": "event"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "createAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "getAccountActiveAgreements",
      "outputs": [
        {
          "internalType": "contract ISuperAgreement[]",
          "name": "activeAgreements",
          "type": "address[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementData",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "agreementClass",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "getAgreementStateSlot",
      "outputs": [
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getHost",
      "outputs": [
        {
          "internalType": "address",
          "name": "host",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountCritical",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountCriticalNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isCritical",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "isAccountSolvent",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "isAccountSolventNow",
      "outputs": [
        {
          "internalType": "bool",
          "name": "isSolvent",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes",
          "name": "liquidationTypeData",
          "type": "bytes"
        },
        {
          "internalType": "address",
          "name": "liquidatorAccount",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "useDefaultRewardAccount",
          "type": "bool"
        },
        {
          "internalType": "address",
          "name": "targetAccount",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "rewardAmount",
          "type": "uint256"
        },
        {
          "internalType": "int256",
          "name": "targetAccountBalanceDelta",
          "type": "int256"
        }
      ],
      "name": "makeLiquidationPayoutsV2",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "name": "realtimeBalanceOf",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        }
      ],
      "name": "realtimeBalanceOfNow",
      "outputs": [
        {
          "internalType": "int256",
          "name": "availableBalance",
          "type": "int256"
        },
        {
          "internalType": "uint256",
          "name": "deposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "owedDeposit",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "timestamp",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "int256",
          "name": "delta",
          "type": "int256"
        }
      ],
      "name": "settleBalance",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "uint256",
          "name": "dataLength",
          "type": "uint256"
        }
      ],
      "name": "terminateAgreement",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "id",
          "type": "bytes32"
        },
        {
          "internalType": "bytes32[]",
          "name": "data",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementData",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "slotId",
          "type": "uint256"
        },
        {
          "internalType": "bytes32[]",
          "name": "slotData",
          "type": "bytes32[]"
        }
      ],
      "name": "updateAgreementStateSlot",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "allSourcePaths": {
    "11": "/home/phydy/.brownie/packages/phydy/sf-brownie@1.0.0/interfaces/superfluid/ISuperAgreement.sol",
    "17": "/home/phydy/.brownie/packages/phydy/sf-brownie@1.0.0/interfaces/superfluid/ISuperfluidToken.sol"
  },
  "ast": {
    "absolutePath": "/home/phydy/.brownie/packages/phydy/sf-brownie@1.0.0/interfaces/superfluid/ISuperfluidToken.sol",
    "exportedSymbols": {
      "ISuperAgreement": [
        5904
      ],
      "ISuperfluidToken": [
        6178
      ]
    },
    "id": 6179,
    "license": "AGPLv3",
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 5906,
        "literals": [
          "solidity",
          ">=",
          "0.8",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "35:24:17"
      },
      {
        "absolutePath": "/home/phydy/.brownie/packages/phydy/sf-brownie@1.0.0/interfaces/superfluid/ISuperAgreement.sol",
        "file": "./ISuperAgreement.sol",
        "id": 5908,
        "nameLocation": "-1:-1:-1",
        "nodeType": "ImportDirective",
        "scope": 6179,
        "sourceUnit": 5905,
        "src": "61:54:17",
        "symbolAliases": [
          {
            "foreign": {
              "id": 5907,
              "name": "ISuperAgreement",
              "nodeType": "Identifier",
              "overloadedDeclarations": [],
              "referencedDeclaration": 5904,
              "src": "69:15:17",
              "typeDescriptions": {}
            },
            "nameLocation": "-1:-1:-1"
          }
        ],
        "unitAlias": ""
      },
      {
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "ISuperfluidToken",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 5909,
          "nodeType": "StructuredDocumentation",
          "src": "117:66:17",
          "text": " @title Superfluid token interface\n @author Superfluid"
        },
        "fullyImplemented": false,
        "id": 6178,
        "linearizedBaseContracts": [
          6178
        ],
        "name": "ISuperfluidToken",
        "nameLocation": "194:16:17",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "documentation": {
              "id": 5910,
              "nodeType": "StructuredDocumentation",
              "src": "403:60:17",
              "text": " @dev Get superfluid host contract address"
            },
            "functionSelector": "20bc4425",
            "id": 5915,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getHost",
            "nameLocation": "477:7:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5911,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "484:2:17"
            },
            "returnParameters": {
              "id": 5914,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5913,
                  "mutability": "mutable",
                  "name": "host",
                  "nameLocation": "518:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5915,
                  "src": "510:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5912,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "510:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "509:14:17"
            },
            "scope": 6178,
            "src": "468:56:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "canonicalName": "ISuperfluidToken.LiquidationTypeData",
            "id": 5920,
            "members": [
              {
                "constant": false,
                "id": 5917,
                "mutability": "mutable",
                "name": "version",
                "nameLocation": "949:7:17",
                "nodeType": "VariableDeclaration",
                "scope": 5920,
                "src": "941:15:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 5916,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "941:7:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "visibility": "internal"
              },
              {
                "constant": false,
                "id": 5919,
                "mutability": "mutable",
                "name": "liquidationType",
                "nameLocation": "972:15:17",
                "nodeType": "VariableDeclaration",
                "scope": 5920,
                "src": "966:21:17",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint8",
                  "typeString": "uint8"
                },
                "typeName": {
                  "id": 5918,
                  "name": "uint8",
                  "nodeType": "ElementaryTypeName",
                  "src": "966:5:17",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  }
                },
                "visibility": "internal"
              }
            ],
            "name": "LiquidationTypeData",
            "nameLocation": "911:19:17",
            "nodeType": "StructDefinition",
            "scope": 6178,
            "src": "904:90:17",
            "visibility": "public"
          },
          {
            "documentation": {
              "id": 5921,
              "nodeType": "StructuredDocumentation",
              "src": "1196:328:17",
              "text": " @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n @param account for the query\n @param timestamp Time of balance\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
            },
            "functionSelector": "eb3537cc",
            "id": 5934,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "realtimeBalanceOf",
            "nameLocation": "1538:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5923,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "1564:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5934,
                  "src": "1556:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5922,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1556:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5925,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "1581:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5934,
                  "src": "1573:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1573:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1555:36:17"
            },
            "returnParameters": {
              "id": 5933,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5928,
                  "mutability": "mutable",
                  "name": "availableBalance",
                  "nameLocation": "1659:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5934,
                  "src": "1652:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5927,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1652:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5930,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "1697:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5934,
                  "src": "1689:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1689:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5932,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "1726:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5934,
                  "src": "1718:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5931,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1718:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1638:109:17"
            },
            "scope": 6178,
            "src": "1529:219:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5935,
              "nodeType": "StructuredDocumentation",
              "src": "1754:339:17",
              "text": " @notice Calculate the realtime balance given the current host.getNow() value\n @dev realtimeBalanceOf with timestamp equals to block timestamp\n @param account for the query\n @return availableBalance Real-time balance\n @return deposit Account deposit\n @return owedDeposit Account owed Deposit"
            },
            "functionSelector": "2ec8eec7",
            "id": 5948,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "realtimeBalanceOfNow",
            "nameLocation": "2107:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5938,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5937,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2136:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5948,
                  "src": "2128:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5936,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2128:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2127:17:17"
            },
            "returnParameters": {
              "id": 5947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5940,
                  "mutability": "mutable",
                  "name": "availableBalance",
                  "nameLocation": "2212:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5948,
                  "src": "2205:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 5939,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2205:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5942,
                  "mutability": "mutable",
                  "name": "deposit",
                  "nameLocation": "2250:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5948,
                  "src": "2242:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5941,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2242:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5944,
                  "mutability": "mutable",
                  "name": "owedDeposit",
                  "nameLocation": "2279:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5948,
                  "src": "2271:19:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5943,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2271:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5946,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2312:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5948,
                  "src": "2304:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5945,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2304:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2191:140:17"
            },
            "scope": 6178,
            "src": "2098:234:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5949,
              "nodeType": "StructuredDocumentation",
              "src": "2338:315:17",
              "text": " @notice Check if account is critical\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @param timestamp The time we'd like to check if the account is critical (should use future)\n @return isCritical Whether the account is critical"
            },
            "functionSelector": "d9d078d6",
            "id": 5958,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountCritical",
            "nameLocation": "2667:17:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5954,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5951,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "2693:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5958,
                  "src": "2685:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5950,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2685:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5953,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "2710:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5958,
                  "src": "2702:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5952,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2702:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2684:36:17"
            },
            "returnParameters": {
              "id": 5957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5956,
                  "mutability": "mutable",
                  "name": "isCritical",
                  "nameLocation": "2773:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5958,
                  "src": "2768:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5955,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "2768:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2767:17:17"
            },
            "scope": 6178,
            "src": "2658:127:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5959,
              "nodeType": "StructuredDocumentation",
              "src": "2791:244:17",
              "text": " @notice Check if account is critical now (current host.getNow())\n @dev A critical account is when availableBalance < 0\n @param account The account to check\n @return isCritical Whether the account is critical"
            },
            "functionSelector": "79359f6f",
            "id": 5966,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountCriticalNow",
            "nameLocation": "3049:20:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5962,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5961,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3078:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "3070:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5960,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3070:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3069:17:17"
            },
            "returnParameters": {
              "id": 5965,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5964,
                  "mutability": "mutable",
                  "name": "isCritical",
                  "nameLocation": "3139:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5966,
                  "src": "3134:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5963,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3134:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3133:17:17"
            },
            "scope": 6178,
            "src": "3040:111:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5967,
              "nodeType": "StructuredDocumentation",
              "src": "3157:335:17",
              "text": " @notice Check if account is solvent\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @param timestamp The time we'd like to check if the account is solvent (should use future)\n @return isSolvent"
            },
            "functionSelector": "b84cdd4a",
            "id": 5976,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountSolvent",
            "nameLocation": "3506:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5972,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5969,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3531:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5976,
                  "src": "3523:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5968,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3523:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 5971,
                  "mutability": "mutable",
                  "name": "timestamp",
                  "nameLocation": "3548:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5976,
                  "src": "3540:17:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 5970,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3540:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3522:36:17"
            },
            "returnParameters": {
              "id": 5975,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5974,
                  "mutability": "mutable",
                  "name": "isSolvent",
                  "nameLocation": "3611:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5976,
                  "src": "3606:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5973,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3606:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3605:16:17"
            },
            "scope": 6178,
            "src": "3497:125:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5977,
              "nodeType": "StructuredDocumentation",
              "src": "3628:241:17",
              "text": " @notice Check if account is solvent now\n @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n @param account The account to check\n @return isSolvent"
            },
            "functionSelector": "bb0d196e",
            "id": 5984,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "isAccountSolventNow",
            "nameLocation": "3883:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5980,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5979,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "3911:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5984,
                  "src": "3903:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5978,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3903:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3902:17:17"
            },
            "returnParameters": {
              "id": 5983,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5982,
                  "mutability": "mutable",
                  "name": "isSolvent",
                  "nameLocation": "3972:9:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5984,
                  "src": "3967:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 5981,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "3967:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3966:16:17"
            },
            "scope": 6178,
            "src": "3874:109:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5985,
              "nodeType": "StructuredDocumentation",
              "src": "3989:282:17",
              "text": " @notice Get a list of agreements that is active for the account\n @dev An active agreement is one that has state for the account\n @param account Account to query\n @return activeAgreements List of accounts that have non-zero states for the account"
            },
            "functionSelector": "386fa221",
            "id": 5994,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAccountActiveAgreements",
            "nameLocation": "4285:26:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 5988,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5987,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "4320:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5994,
                  "src": "4312:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 5986,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4312:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4311:17:17"
            },
            "returnParameters": {
              "id": 5993,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5992,
                  "mutability": "mutable",
                  "name": "activeAgreements",
                  "nameLocation": "4401:16:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 5994,
                  "src": "4376:41:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$5904_$dyn_memory_ptr",
                    "typeString": "contract ISuperAgreement[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5990,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 5989,
                        "name": "ISuperAgreement",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 5904,
                        "src": "4376:15:17"
                      },
                      "referencedDeclaration": 5904,
                      "src": "4376:15:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_ISuperAgreement_$5904",
                        "typeString": "contract ISuperAgreement"
                      }
                    },
                    "id": 5991,
                    "nodeType": "ArrayTypeName",
                    "src": "4376:17:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_ISuperAgreement_$5904_$dyn_storage_ptr",
                      "typeString": "contract ISuperAgreement[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4375:43:17"
            },
            "scope": 6178,
            "src": "4276:143:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 5995,
              "nodeType": "StructuredDocumentation",
              "src": "4627:110:17",
              "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "functionSelector": "12a6a3f8",
            "id": 6003,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "createAgreement",
            "nameLocation": "4751:15:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6001,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 5997,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "4775:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6003,
                  "src": "4767:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 5996,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "4767:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6000,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "4798:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6003,
                  "src": "4779:23:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 5998,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "4779:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 5999,
                    "nodeType": "ArrayTypeName",
                    "src": "4779:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4766:37:17"
            },
            "returnParameters": {
              "id": 6002,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4812:0:17"
            },
            "scope": 6178,
            "src": "4742:71:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6004,
              "nodeType": "StructuredDocumentation",
              "src": "4819:174:17",
              "text": " @dev Agreement created event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "eventSelector": "770ea40a13a4644573ed785e5c7116890709947918747febc5add46feb531e2d",
            "id": 6013,
            "name": "AgreementCreated",
            "nameLocation": "5004:16:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6012,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6006,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "5046:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6013,
                  "src": "5030:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6005,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5030:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6008,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5078:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6013,
                  "src": "5070:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6007,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5070:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6011,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5100:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6013,
                  "src": "5090:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6009,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5090:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6010,
                    "nodeType": "ArrayTypeName",
                    "src": "5090:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5020:90:17"
            },
            "src": "4998:113:17"
          },
          {
            "documentation": {
              "id": 6014,
              "nodeType": "StructuredDocumentation",
              "src": "5117:184:17",
              "text": " @dev Get data of the agreement\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @return data Data of the agreement"
            },
            "functionSelector": "6c2d9f2f",
            "id": 6026,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementData",
            "nameLocation": "5315:16:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6021,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6016,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "5349:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "5341:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6015,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5341:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6018,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5381:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "5373:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6017,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5373:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6020,
                  "mutability": "mutable",
                  "name": "dataLength",
                  "nameLocation": "5401:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "5393:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6019,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "5393:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5331:86:17"
            },
            "returnParameters": {
              "id": 6025,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6024,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5458:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6026,
                  "src": "5441:21:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6022,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5441:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6023,
                    "nodeType": "ArrayTypeName",
                    "src": "5441:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5440:23:17"
            },
            "scope": 6178,
            "src": "5306:158:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6027,
              "nodeType": "StructuredDocumentation",
              "src": "5470:110:17",
              "text": " @dev Create a new agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "functionSelector": "a1b2bf8b",
            "id": 6035,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAgreementData",
            "nameLocation": "5594:19:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6033,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6029,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5622:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6035,
                  "src": "5614:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6028,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5614:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6032,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5645:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6035,
                  "src": "5626:23:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6030,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5626:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6031,
                    "nodeType": "ArrayTypeName",
                    "src": "5626:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5613:37:17"
            },
            "returnParameters": {
              "id": 6034,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5659:0:17"
            },
            "scope": 6178,
            "src": "5585:75:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6036,
              "nodeType": "StructuredDocumentation",
              "src": "5666:174:17",
              "text": " @dev Agreement updated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param data Agreement data"
            },
            "eventSelector": "0c4c547b3a4fcaa5be8353b3111472b124155bccc86de811d4a481c9e6e9faca",
            "id": 6045,
            "name": "AgreementUpdated",
            "nameLocation": "5851:16:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6044,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6038,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "5893:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6045,
                  "src": "5877:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6037,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "5877:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6040,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "5925:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6045,
                  "src": "5917:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6039,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "5917:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6043,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "data",
                  "nameLocation": "5947:4:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6045,
                  "src": "5937:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6041,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "5937:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6042,
                    "nodeType": "ArrayTypeName",
                    "src": "5937:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5867:90:17"
            },
            "src": "5845:113:17"
          },
          {
            "documentation": {
              "id": 6046,
              "nodeType": "StructuredDocumentation",
              "src": "5964:73:17",
              "text": " @dev Close the agreement\n @param id Agreement ID"
            },
            "functionSelector": "27048397",
            "id": 6053,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "terminateAgreement",
            "nameLocation": "6051:18:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6051,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6048,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6078:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6053,
                  "src": "6070:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6047,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6070:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6050,
                  "mutability": "mutable",
                  "name": "dataLength",
                  "nameLocation": "6090:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6053,
                  "src": "6082:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6049,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6082:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6069:32:17"
            },
            "returnParameters": {
              "id": 6052,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6110:0:17"
            },
            "scope": 6178,
            "src": "6042:69:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6054,
              "nodeType": "StructuredDocumentation",
              "src": "6117:143:17",
              "text": " @dev Agreement terminated event\n @param agreementClass Contract address of the agreement\n @param id Agreement ID"
            },
            "eventSelector": "71a63dc095de07aa5512ad57a7596a39516317e316981a1cd71000057be1537b",
            "id": 6060,
            "name": "AgreementTerminated",
            "nameLocation": "6271:19:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6059,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6056,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "6307:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "6291:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6055,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6291:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6058,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "6331:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6060,
                  "src": "6323:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6057,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "6323:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6290:44:17"
            },
            "src": "6265:70:17"
          },
          {
            "documentation": {
              "id": 6061,
              "nodeType": "StructuredDocumentation",
              "src": "6341:190:17",
              "text": " @dev Update agreement state slot\n @param account Account to be updated\n NOTE\n - To clear the storage out, provide zero-ed array of intended length"
            },
            "functionSelector": "090c415e",
            "id": 6071,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "updateAgreementStateSlot",
            "nameLocation": "6545:24:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6069,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6063,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6587:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6071,
                  "src": "6579:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6062,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6579:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6065,
                  "mutability": "mutable",
                  "name": "slotId",
                  "nameLocation": "6612:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6071,
                  "src": "6604:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6064,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6604:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6068,
                  "mutability": "mutable",
                  "name": "slotData",
                  "nameLocation": "6647:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6071,
                  "src": "6628:27:17",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_calldata_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6066,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "6628:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6067,
                    "nodeType": "ArrayTypeName",
                    "src": "6628:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6569:92:17"
            },
            "returnParameters": {
              "id": 6070,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6670:0:17"
            },
            "scope": 6178,
            "src": "6536:135:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6072,
              "nodeType": "StructuredDocumentation",
              "src": "6677:214:17",
              "text": " @dev Agreement account state updated event\n @param agreementClass Contract address of the agreement\n @param account Account updated\n @param slotId slot id of the agreement state"
            },
            "eventSelector": "30f416fa68fca014a0f334464c64b000ba53e99b6d2afdea9d5ca756372d5985",
            "id": 6080,
            "name": "AgreementStateUpdated",
            "nameLocation": "6902:21:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6079,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6074,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "6949:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6080,
                  "src": "6933:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6073,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6933:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6076,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "6989:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6080,
                  "src": "6973:23:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6075,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6973:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6078,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "slotId",
                  "nameLocation": "7014:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6080,
                  "src": "7006:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6077,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7006:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6923:103:17"
            },
            "src": "6896:131:17"
          },
          {
            "documentation": {
              "id": 6081,
              "nodeType": "StructuredDocumentation",
              "src": "7033:267:17",
              "text": " @dev Get data of the slot of the state of an agreement\n @param agreementClass Contract address of the agreement\n @param account Account to query\n @param slotId slot id of the state\n @param dataLength length of the state data"
            },
            "functionSelector": "4b61cc33",
            "id": 6095,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "getAgreementStateSlot",
            "nameLocation": "7314:21:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6090,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6083,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "7353:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6095,
                  "src": "7345:22:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6082,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7345:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6085,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7385:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6095,
                  "src": "7377:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6084,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7377:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6087,
                  "mutability": "mutable",
                  "name": "slotId",
                  "nameLocation": "7410:6:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6095,
                  "src": "7402:14:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6086,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7402:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6089,
                  "mutability": "mutable",
                  "name": "dataLength",
                  "nameLocation": "7434:10:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6095,
                  "src": "7426:18:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6088,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7426:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7335:115:17"
            },
            "returnParameters": {
              "id": 6094,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6093,
                  "mutability": "mutable",
                  "name": "slotData",
                  "nameLocation": "7491:8:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6095,
                  "src": "7474:25:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bytes32_$dyn_memory_ptr",
                    "typeString": "bytes32[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 6091,
                      "name": "bytes32",
                      "nodeType": "ElementaryTypeName",
                      "src": "7474:7:17",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "id": 6092,
                    "nodeType": "ArrayTypeName",
                    "src": "7474:9:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bytes32_$dyn_storage_ptr",
                      "typeString": "bytes32[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7473:27:17"
            },
            "scope": 6178,
            "src": "7305:196:17",
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6096,
              "nodeType": "StructuredDocumentation",
              "src": "7507:312:17",
              "text": " @notice Settle balance from an account by the agreement\n @dev The agreement needs to make sure that the balance delta is balanced afterwards\n @param account Account to query.\n @param delta Amount of balance delta to be settled\n Modifiers:\n  - onlyAgreement"
            },
            "functionSelector": "cf97256d",
            "id": 6103,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "settleBalance",
            "nameLocation": "7833:13:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6101,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6098,
                  "mutability": "mutable",
                  "name": "account",
                  "nameLocation": "7855:7:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6103,
                  "src": "7847:15:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6097,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7847:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6100,
                  "mutability": "mutable",
                  "name": "delta",
                  "nameLocation": "7871:5:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6103,
                  "src": "7864:12:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 6099,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7864:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7846:31:17"
            },
            "returnParameters": {
              "id": 6102,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7886:0:17"
            },
            "scope": 6178,
            "src": "7824:63:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "documentation": {
              "id": 6104,
              "nodeType": "StructuredDocumentation",
              "src": "7893:1131:17",
              "text": " @dev Make liquidation payouts (v2)\n @param id Agreement ID\n @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n @param liquidatorAccount Address of the executor of the liquidation\n @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n @param targetAccount Account of the stream sender\n @param rewardAmount The amount the reward recepient account will receive\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n - If a bailout is required (bailoutAmount > 0)\n   - the actual reward (single deposit) goes to the executor,\n   - while the reward account becomes the bailout account\n   - total bailout include: bailout amount + reward amount\n   - the targetAccount will be bailed out\n - If a bailout is not required\n   - the targetAccount will pay the rewardAmount\n   - the liquidator (reward account in PIC period) will receive the rewardAmount\n Modifiers:\n  - onlyAgreement"
            },
            "functionSelector": "1863e809",
            "id": 6121,
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "makeLiquidationPayoutsV2",
            "nameLocation": "9038:24:17",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 6119,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6106,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "9080:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6121,
                  "src": "9072:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6105,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "9072:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6108,
                  "mutability": "mutable",
                  "name": "liquidationTypeData",
                  "nameLocation": "9105:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6121,
                  "src": "9092:32:17",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6107,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "9092:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6110,
                  "mutability": "mutable",
                  "name": "liquidatorAccount",
                  "nameLocation": "9142:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6121,
                  "src": "9134:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6109,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9134:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6112,
                  "mutability": "mutable",
                  "name": "useDefaultRewardAccount",
                  "nameLocation": "9174:23:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6121,
                  "src": "9169:28:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 6111,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "9169:4:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6114,
                  "mutability": "mutable",
                  "name": "targetAccount",
                  "nameLocation": "9215:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6121,
                  "src": "9207:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6113,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "9207:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6116,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "9246:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6121,
                  "src": "9238:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6115,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9238:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6118,
                  "mutability": "mutable",
                  "name": "targetAccountBalanceDelta",
                  "nameLocation": "9275:25:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6121,
                  "src": "9268:32:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 6117,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "9268:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "9062:244:17"
            },
            "returnParameters": {
              "id": 6120,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "9315:0:17"
            },
            "scope": 6178,
            "src": "9029:287:17",
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6122,
              "nodeType": "StructuredDocumentation",
              "src": "9322:1465:17",
              "text": " @dev Agreement liquidation event v2 (including agent account)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param liquidatorAccount Address of the executor of the liquidation\n @param targetAccount Account of the stream sender\n @param rewardAccount Account that collects the reward or bails out insolvent accounts\n @param rewardAmount The amount the reward recipient account balance should change by\n @param targetAccountBalanceDelta The amount the sender account balance should change by\n @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n NOTE:\n Reward account rule:\n - if the agreement is liquidated during the PIC period\n   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n   - the targetAccount will pay for the rewardAmount\n - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n   - the liquidatorAccount will get the rewardAmount (remaining deposit)\n   - the targetAccount will pay for the rewardAmount\n - if the targetAccount is insolvent\n   - the liquidatorAccount will get the rewardAmount (single deposit)\n   - the rewardAccount will pay for both the rewardAmount and bailoutAmount\n   - the targetAccount will receive the bailoutAmount"
            },
            "eventSelector": "b8381a3ce157650e06186e3e8f4dd4dc29236f2688b6eed1893d0a60d7c6386f",
            "id": 6140,
            "name": "AgreementLiquidatedV2",
            "nameLocation": "10798:21:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6139,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6124,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "10845:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "10829:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6123,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10829:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6126,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "10877:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "10869:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6125,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "10869:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6128,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "liquidatorAccount",
                  "nameLocation": "10905:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "10889:33:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6127,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10889:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6130,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "targetAccount",
                  "nameLocation": "10948:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "10932:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6129,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10932:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6132,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAccount",
                  "nameLocation": "10979:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "10971:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6131,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "10971:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6134,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "11010:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "11002:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6133,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11002:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6136,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "targetAccountBalanceDelta",
                  "nameLocation": "11039:25:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "11032:32:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_int256",
                    "typeString": "int256"
                  },
                  "typeName": {
                    "id": 6135,
                    "name": "int256",
                    "nodeType": "ElementaryTypeName",
                    "src": "11032:6:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_int256",
                      "typeString": "int256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6138,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidationTypeData",
                  "nameLocation": "11080:19:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6140,
                  "src": "11074:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 6137,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "11074:5:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10819:286:17"
            },
            "src": "10792:314:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6141,
              "nodeType": "StructuredDocumentation",
              "src": "11916:449:17",
              "text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param rewardAccount Account that collect the reward\n @param rewardAmount Amount of liquidation reward\n NOTE:\n [DEPRECATED] Use AgreementLiquidatedV2 instead"
            },
            "eventSelector": "8505c3d8f1f184f032cf0bc4cd80ee61c8b9d94f8907c3281bf0101a2610fe80",
            "id": 6153,
            "name": "AgreementLiquidated",
            "nameLocation": "12376:19:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6152,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6143,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "12421:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6153,
                  "src": "12405:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6142,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12405:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6145,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "12453:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6153,
                  "src": "12445:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6144,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "12445:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6147,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "penaltyAccount",
                  "nameLocation": "12481:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6153,
                  "src": "12465:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6146,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12465:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6149,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "rewardAccount",
                  "nameLocation": "12521:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6153,
                  "src": "12505:29:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6148,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12505:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6151,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "12552:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6153,
                  "src": "12544:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6150,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12544:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12395:175:17"
            },
            "src": "12370:201:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6154,
              "nodeType": "StructuredDocumentation",
              "src": "12577:290:17",
              "text": " @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n @param bailoutAccount Account that bailout the penalty account\n @param bailoutAmount Amount of account bailout\n NOTE:\n [DEPRECATED] Use AgreementLiquidatedV2 instead"
            },
            "eventSelector": "d6c9a04afc81e8c614310bbee6c9e84f5abe15b82038bf8347014ce0852e6ffd",
            "id": 6160,
            "name": "Bailout",
            "nameLocation": "12878:7:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6159,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6156,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bailoutAccount",
                  "nameLocation": "12902:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6160,
                  "src": "12886:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6155,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12886:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6158,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bailoutAmount",
                  "nameLocation": "12926:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6160,
                  "src": "12918:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6157,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12918:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12885:55:17"
            },
            "src": "12872:69:17"
          },
          {
            "anonymous": false,
            "documentation": {
              "id": 6161,
              "nodeType": "StructuredDocumentation",
              "src": "12947:1007:17",
              "text": " @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n @param liquidatorAccount Account of the agent that performed the liquidation.\n @param agreementClass Contract address of the agreement\n @param id Agreement ID\n @param penaltyAccount Account of the agreement to be penalized\n @param bondAccount Account that collect the reward or bailout accounts\n @param rewardAmount Amount of liquidation reward\n @param bailoutAmount Amount of liquidation bailouot\n NOTE:\n Reward account rule:\n - if bailout is equal to 0, then\n   - the bondAccount will get the rewardAmount,\n   - the penaltyAccount will pay for the rewardAmount.\n - if bailout is larger than 0, then\n   - the liquidatorAccount will get the rewardAmouont,\n   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount."
            },
            "eventSelector": "5f22b60e58b1d6de858bc27c48d5a4653e052da99e083c1d88bb8c58e1abc8ef",
            "id": 6177,
            "name": "AgreementLiquidatedBy",
            "nameLocation": "13965:21:17",
            "nodeType": "EventDefinition",
            "parameters": {
              "id": 6176,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 6163,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "liquidatorAccount",
                  "nameLocation": "14004:17:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6177,
                  "src": "13996:25:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6162,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "13996:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6165,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "agreementClass",
                  "nameLocation": "14047:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6177,
                  "src": "14031:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6164,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14031:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6167,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "id",
                  "nameLocation": "14079:2:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6177,
                  "src": "14071:10:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 6166,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "14071:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6169,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "penaltyAccount",
                  "nameLocation": "14107:14:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6177,
                  "src": "14091:30:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6168,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14091:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6171,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "bondAccount",
                  "nameLocation": "14147:11:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6177,
                  "src": "14131:27:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 6170,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "14131:7:17",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6173,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "rewardAmount",
                  "nameLocation": "14176:12:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6177,
                  "src": "14168:20:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6172,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14168:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 6175,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "bailoutAmount",
                  "nameLocation": "14206:13:17",
                  "nodeType": "VariableDeclaration",
                  "scope": 6177,
                  "src": "14198:21:17",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 6174,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "14198:7:17",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "13986:239:17"
            },
            "src": "13959:267:17"
          }
        ],
        "scope": 6179,
        "src": "184:14044:17",
        "usedErrors": []
      }
    ],
    "src": "35:14194:17"
  },
  "bytecode": "",
  "bytecodeSha1": "da39a3ee5e6b4b0d3255bfef95601890afd80709",
  "compiler": {
    "evm_version": "istanbul",
    "optimizer": {
      "enabled": true,
      "runs": 200
    },
    "version": "0.8.13+commit.abaa5c0e"
  },
  "contractName": "ISuperfluidToken",
  "coverageMap": {
    "branches": {},
    "statements": {}
  },
  "dependencies": [
    "phydy/sf-brownie@1.0.0/ISuperAgreement"
  ],
  "deployedBytecode": "",
  "deployedSourceMap": "",
  "language": "Solidity",
  "natspec": {
    "author": "Superfluid",
    "events": {
      "AgreementCreated(address,bytes32,bytes32[])": {
        "details": "Agreement created event",
        "params": {
          "agreementClass": "Contract address of the agreement",
          "data": "Agreement data",
          "id": "Agreement ID"
        }
      },
      "AgreementLiquidated(address,bytes32,address,address,uint256)": {
        "details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)",
        "params": {
          "agreementClass": "Contract address of the agreement",
          "id": "Agreement ID",
          "penaltyAccount": "Account of the agreement to be penalized",
          "rewardAccount": "Account that collect the reward",
          "rewardAmount": "Amount of liquidation reward NOTE: [DEPRECATED] Use AgreementLiquidatedV2 instead"
        }
      },
      "AgreementLiquidatedBy(address,address,bytes32,address,address,uint256,uint256)": {
        "details": "Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)",
        "params": {
          "agreementClass": "Contract address of the agreement",
          "bailoutAmount": "Amount of liquidation bailouot NOTE: Reward account rule: - if bailout is equal to 0, then   - the bondAccount will get the rewardAmount,   - the penaltyAccount will pay for the rewardAmount. - if bailout is larger than 0, then   - the liquidatorAccount will get the rewardAmouont,   - the bondAccount will pay for both the rewardAmount and bailoutAmount,   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.",
          "bondAccount": "Account that collect the reward or bailout accounts",
          "id": "Agreement ID",
          "liquidatorAccount": "Account of the agent that performed the liquidation.",
          "penaltyAccount": "Account of the agreement to be penalized",
          "rewardAmount": "Amount of liquidation reward"
        }
      },
      "AgreementLiquidatedV2(address,bytes32,address,address,address,uint256,int256,bytes)": {
        "details": "Agreement liquidation event v2 (including agent account)",
        "params": {
          "agreementClass": "Contract address of the agreement",
          "id": "Agreement ID",
          "liquidationTypeData": "The encoded liquidation type data including the version (how to decode) NOTE: Reward account rule: - if the agreement is liquidated during the PIC period   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount   - the targetAccount will pay for the rewardAmount - if the agreement is liquidated after the PIC period AND the targetAccount is solvent   - the liquidatorAccount will get the rewardAmount (remaining deposit)   - the targetAccount will pay for the rewardAmount - if the targetAccount is insolvent   - the liquidatorAccount will get the rewardAmount (single deposit)   - the rewardAccount will pay for both the rewardAmount and bailoutAmount   - the targetAccount will receive the bailoutAmount",
          "liquidatorAccount": "Address of the executor of the liquidation",
          "rewardAccount": "Account that collects the reward or bails out insolvent accounts",
          "rewardAmount": "The amount the reward recipient account balance should change by",
          "targetAccount": "Account of the stream sender",
          "targetAccountBalanceDelta": "The amount the sender account balance should change by"
        }
      },
      "AgreementStateUpdated(address,address,uint256)": {
        "details": "Agreement account state updated event",
        "params": {
          "account": "Account updated",
          "agreementClass": "Contract address of the agreement",
          "slotId": "slot id of the agreement state"
        }
      },
      "AgreementTerminated(address,bytes32)": {
        "details": "Agreement terminated event",
        "params": {
          "agreementClass": "Contract address of the agreement",
          "id": "Agreement ID"
        }
      },
      "AgreementUpdated(address,bytes32,bytes32[])": {
        "details": "Agreement updated event",
        "params": {
          "agreementClass": "Contract address of the agreement",
          "data": "Agreement data",
          "id": "Agreement ID"
        }
      },
      "Bailout(address,uint256)": {
        "details": "System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)",
        "params": {
          "bailoutAccount": "Account that bailout the penalty account",
          "bailoutAmount": "Amount of account bailout NOTE: [DEPRECATED] Use AgreementLiquidatedV2 instead"
        }
      }
    },
    "kind": "dev",
    "methods": {
      "createAgreement(bytes32,bytes32[])": {
        "details": "Create a new agreement",
        "params": {
          "data": "Agreement data",
          "id": "Agreement ID"
        }
      },
      "getAccountActiveAgreements(address)": {
        "details": "An active agreement is one that has state for the account",
        "notice": "Get a list of agreements that is active for the account",
        "params": {
          "account": "Account to query"
        },
        "returns": {
          "activeAgreements": "List of accounts that have non-zero states for the account"
        }
      },
      "getAgreementData(address,bytes32,uint256)": {
        "details": "Get data of the agreement",
        "params": {
          "agreementClass": "Contract address of the agreement",
          "id": "Agreement ID"
        },
        "returns": {
          "data": "Data of the agreement"
        }
      },
      "getAgreementStateSlot(address,address,uint256,uint256)": {
        "details": "Get data of the slot of the state of an agreement",
        "params": {
          "account": "Account to query",
          "agreementClass": "Contract address of the agreement",
          "dataLength": "length of the state data",
          "slotId": "slot id of the state"
        }
      },
      "getHost()": {
        "details": "Get superfluid host contract address"
      },
      "isAccountCritical(address,uint256)": {
        "details": "A critical account is when availableBalance < 0",
        "notice": "Check if account is critical",
        "params": {
          "account": "The account to check",
          "timestamp": "The time we'd like to check if the account is critical (should use future)"
        },
        "returns": {
          "isCritical": "Whether the account is critical"
        }
      },
      "isAccountCriticalNow(address)": {
        "details": "A critical account is when availableBalance < 0",
        "notice": "Check if account is critical now (current host.getNow())",
        "params": {
          "account": "The account to check"
        },
        "returns": {
          "isCritical": "Whether the account is critical"
        }
      },
      "isAccountSolvent(address,uint256)": {
        "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
        "notice": "Check if account is solvent",
        "params": {
          "account": "The account to check",
          "timestamp": "The time we'd like to check if the account is solvent (should use future)"
        },
        "returns": {
          "isSolvent": "isSolvent"
        }
      },
      "isAccountSolventNow(address)": {
        "details": "An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance",
        "notice": "Check if account is solvent now",
        "params": {
          "account": "The account to check"
        },
        "returns": {
          "isSolvent": "isSolvent"
        }
      },
      "makeLiquidationPayoutsV2(bytes32,bytes,address,bool,address,uint256,int256)": {
        "details": "Make liquidation payouts (v2)",
        "params": {
          "id": "Agreement ID",
          "liquidationTypeData": "Data regarding the version of the liquidation schema and the type",
          "liquidatorAccount": "Address of the executor of the liquidation",
          "rewardAmount": "The amount the reward recepient account will receive",
          "targetAccount": "Account of the stream sender",
          "targetAccountBalanceDelta": "The amount the sender account balance should change by - If a bailout is required (bailoutAmount > 0)   - the actual reward (single deposit) goes to the executor,   - while the reward account becomes the bailout account   - total bailout include: bailout amount + reward amount   - the targetAccount will be bailed out - If a bailout is not required   - the targetAccount will pay the rewardAmount   - the liquidator (reward account in PIC period) will receive the rewardAmount Modifiers:  - onlyAgreement",
          "useDefaultRewardAccount": "Whether or not the default reward account receives the rewardAmount"
        }
      },
      "realtimeBalanceOf(address,uint256)": {
        "details": "Calculate the real balance of a user, taking in consideration all agreements of the account",
        "params": {
          "account": "for the query",
          "timestamp": "Time of balance"
        },
        "returns": {
          "availableBalance": "Real-time balance",
          "deposit": "Account deposit",
          "owedDeposit": "Account owed Deposit"
        }
      },
      "realtimeBalanceOfNow(address)": {
        "details": "realtimeBalanceOf with timestamp equals to block timestamp",
        "notice": "Calculate the realtime balance given the current host.getNow() value",
        "params": {
          "account": "for the query"
        },
        "returns": {
          "availableBalance": "Real-time balance",
          "deposit": "Account deposit",
          "owedDeposit": "Account owed Deposit"
        }
      },
      "settleBalance(address,int256)": {
        "details": "The agreement needs to make sure that the balance delta is balanced afterwards",
        "notice": "Settle balance from an account by the agreement",
        "params": {
          "account": "Account to query.",
          "delta": "Amount of balance delta to be settled Modifiers:  - onlyAgreement"
        }
      },
      "terminateAgreement(bytes32,uint256)": {
        "details": "Close the agreement",
        "params": {
          "id": "Agreement ID"
        }
      },
      "updateAgreementData(bytes32,bytes32[])": {
        "details": "Create a new agreement",
        "params": {
          "data": "Agreement data",
          "id": "Agreement ID"
        }
      },
      "updateAgreementStateSlot(address,uint256,bytes32[])": {
        "details": "Update agreement state slot",
        "params": {
          "account": "Account to be updated NOTE - To clear the storage out, provide zero-ed array of intended length"
        }
      }
    },
    "title": "Superfluid token interface",
    "version": 1
  },
  "offset": [
    184,
    14228
  ],
  "opcodes": "",
  "pcMap": {},
  "sha1": "518431b626f2e5774459c2ca4d74a95217d40b7d",
  "source": "// SPDX-License-Identifier: AGPLv3\npragma solidity >=0.8.0;\n\nimport {ISuperAgreement} from \"./ISuperAgreement.sol\";\n\n/**\n * @title Superfluid token interface\n * @author Superfluid\n */\ninterface ISuperfluidToken {\n    /**************************************************************************\n     * Basic information\n     *************************************************************************/\n\n    /**\n     * @dev Get superfluid host contract address\n     */\n    function getHost() external view returns (address host);\n\n    /**\n     * @dev Encoded liquidation type data mainly used for handling stack to deep errors\n     *\n     * Note:\n     * - version: 1\n     * - liquidationType key:\n     *    - 0 = reward account receives reward (PIC period)\n     *    - 1 = liquidator account receives reward (Pleb period)\n     *    - 2 = liquidator account receives reward (Pirate period/bailout)\n     */\n    struct LiquidationTypeData {\n        uint256 version;\n        uint8 liquidationType;\n    }\n\n    /**************************************************************************\n     * Real-time balance functions\n     *************************************************************************/\n\n    /**\n     * @dev Calculate the real balance of a user, taking in consideration all agreements of the account\n     * @param account for the query\n     * @param timestamp Time of balance\n     * @return availableBalance Real-time balance\n     * @return deposit Account deposit\n     * @return owedDeposit Account owed Deposit\n     */\n    function realtimeBalanceOf(address account, uint256 timestamp)\n        external\n        view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit\n        );\n\n    /**\n     * @notice Calculate the realtime balance given the current host.getNow() value\n     * @dev realtimeBalanceOf with timestamp equals to block timestamp\n     * @param account for the query\n     * @return availableBalance Real-time balance\n     * @return deposit Account deposit\n     * @return owedDeposit Account owed Deposit\n     */\n    function realtimeBalanceOfNow(address account)\n        external\n        view\n        returns (\n            int256 availableBalance,\n            uint256 deposit,\n            uint256 owedDeposit,\n            uint256 timestamp\n        );\n\n    /**\n     * @notice Check if account is critical\n     * @dev A critical account is when availableBalance < 0\n     * @param account The account to check\n     * @param timestamp The time we'd like to check if the account is critical (should use future)\n     * @return isCritical Whether the account is critical\n     */\n    function isAccountCritical(address account, uint256 timestamp)\n        external\n        view\n        returns (bool isCritical);\n\n    /**\n     * @notice Check if account is critical now (current host.getNow())\n     * @dev A critical account is when availableBalance < 0\n     * @param account The account to check\n     * @return isCritical Whether the account is critical\n     */\n    function isAccountCriticalNow(address account)\n        external\n        view\n        returns (bool isCritical);\n\n    /**\n     * @notice Check if account is solvent\n     * @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n     * @param account The account to check\n     * @param timestamp The time we'd like to check if the account is solvent (should use future)\n     * @return isSolvent\n     */\n    function isAccountSolvent(address account, uint256 timestamp)\n        external\n        view\n        returns (bool isSolvent);\n\n    /**\n     * @notice Check if account is solvent now\n     * @dev An account is insolvent when the sum of deposits for a token can't cover the negative availableBalance\n     * @param account The account to check\n     * @return isSolvent\n     */\n    function isAccountSolventNow(address account)\n        external\n        view\n        returns (bool isSolvent);\n\n    /**\n     * @notice Get a list of agreements that is active for the account\n     * @dev An active agreement is one that has state for the account\n     * @param account Account to query\n     * @return activeAgreements List of accounts that have non-zero states for the account\n     */\n    function getAccountActiveAgreements(address account)\n        external\n        view\n        returns (ISuperAgreement[] memory activeAgreements);\n\n    /**************************************************************************\n     * Super Agreement hosting functions\n     *************************************************************************/\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function createAgreement(bytes32 id, bytes32[] calldata data) external;\n\n    /**\n     * @dev Agreement created event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementCreated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Get data of the agreement\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @return data Data of the agreement\n     */\n    function getAgreementData(\n        address agreementClass,\n        bytes32 id,\n        uint256 dataLength\n    ) external view returns (bytes32[] memory data);\n\n    /**\n     * @dev Create a new agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    function updateAgreementData(bytes32 id, bytes32[] calldata data) external;\n\n    /**\n     * @dev Agreement updated event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param data Agreement data\n     */\n    event AgreementUpdated(\n        address indexed agreementClass,\n        bytes32 id,\n        bytes32[] data\n    );\n\n    /**\n     * @dev Close the agreement\n     * @param id Agreement ID\n     */\n    function terminateAgreement(bytes32 id, uint256 dataLength) external;\n\n    /**\n     * @dev Agreement terminated event\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     */\n    event AgreementTerminated(address indexed agreementClass, bytes32 id);\n\n    /**\n     * @dev Update agreement state slot\n     * @param account Account to be updated\n     *\n     * NOTE\n     * - To clear the storage out, provide zero-ed array of intended length\n     */\n    function updateAgreementStateSlot(\n        address account,\n        uint256 slotId,\n        bytes32[] calldata slotData\n    ) external;\n\n    /**\n     * @dev Agreement account state updated event\n     * @param agreementClass Contract address of the agreement\n     * @param account Account updated\n     * @param slotId slot id of the agreement state\n     */\n    event AgreementStateUpdated(\n        address indexed agreementClass,\n        address indexed account,\n        uint256 slotId\n    );\n\n    /**\n     * @dev Get data of the slot of the state of an agreement\n     * @param agreementClass Contract address of the agreement\n     * @param account Account to query\n     * @param slotId slot id of the state\n     * @param dataLength length of the state data\n     */\n    function getAgreementStateSlot(\n        address agreementClass,\n        address account,\n        uint256 slotId,\n        uint256 dataLength\n    ) external view returns (bytes32[] memory slotData);\n\n    /**\n     * @notice Settle balance from an account by the agreement\n     * @dev The agreement needs to make sure that the balance delta is balanced afterwards\n     * @param account Account to query.\n     * @param delta Amount of balance delta to be settled\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function settleBalance(address account, int256 delta) external;\n\n    /**\n     * @dev Make liquidation payouts (v2)\n     * @param id Agreement ID\n     * @param liquidationTypeData Data regarding the version of the liquidation schema and the type\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param useDefaultRewardAccount Whether or not the default reward account receives the rewardAmount\n     * @param targetAccount Account of the stream sender\n     * @param rewardAmount The amount the reward recepient account will receive\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     *\n     * - If a bailout is required (bailoutAmount > 0)\n     *   - the actual reward (single deposit) goes to the executor,\n     *   - while the reward account becomes the bailout account\n     *   - total bailout include: bailout amount + reward amount\n     *   - the targetAccount will be bailed out\n     * - If a bailout is not required\n     *   - the targetAccount will pay the rewardAmount\n     *   - the liquidator (reward account in PIC period) will receive the rewardAmount\n     *\n     * Modifiers:\n     *  - onlyAgreement\n     */\n    function makeLiquidationPayoutsV2(\n        bytes32 id,\n        bytes memory liquidationTypeData,\n        address liquidatorAccount,\n        bool useDefaultRewardAccount,\n        address targetAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta\n    ) external;\n\n    /**\n     * @dev Agreement liquidation event v2 (including agent account)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param liquidatorAccount Address of the executor of the liquidation\n     * @param targetAccount Account of the stream sender\n     * @param rewardAccount Account that collects the reward or bails out insolvent accounts\n     * @param rewardAmount The amount the reward recipient account balance should change by\n     * @param targetAccountBalanceDelta The amount the sender account balance should change by\n     * @param liquidationTypeData The encoded liquidation type data including the version (how to decode)\n     *\n     * NOTE:\n     * Reward account rule:\n     * - if the agreement is liquidated during the PIC period\n     *   - the rewardAccount will get the rewardAmount (remaining deposit), regardless of the liquidatorAccount\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the agreement is liquidated after the PIC period AND the targetAccount is solvent\n     *   - the liquidatorAccount will get the rewardAmount (remaining deposit)\n     *   - the targetAccount will pay for the rewardAmount\n     * - if the targetAccount is insolvent\n     *   - the liquidatorAccount will get the rewardAmount (single deposit)\n     *   - the rewardAccount will pay for both the rewardAmount and bailoutAmount\n     *   - the targetAccount will receive the bailoutAmount\n     */\n    event AgreementLiquidatedV2(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed liquidatorAccount,\n        address indexed targetAccount,\n        address rewardAccount,\n        uint256 rewardAmount,\n        int256 targetAccountBalanceDelta,\n        bytes liquidationTypeData\n    );\n\n    /**************************************************************************\n     * Function modifiers for access control and parameter validations\n     *\n     * While they cannot be explicitly stated in function definitions, they are\n     * listed in function definition comments instead for clarity.\n     *\n     * NOTE: solidity-coverage not supporting it\n     *************************************************************************/\n\n    /// @dev The msg.sender must be host contract\n    //modifier onlyHost() virtual;\n\n    /// @dev The msg.sender must be a listed agreement.\n    //modifier onlyAgreement() virtual;\n\n    /**************************************************************************\n     * DEPRECATED\n     *************************************************************************/\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedBy)\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param rewardAccount Account that collect the reward\n     * @param rewardAmount Amount of liquidation reward\n     *\n     * NOTE:\n     *\n     * [DEPRECATED] Use AgreementLiquidatedV2 instead\n     */\n    event AgreementLiquidated(\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed rewardAccount,\n        uint256 rewardAmount\n    );\n\n    /**\n     * @dev System bailout occurred (DEPRECATED BY AgreementLiquidatedBy)\n     * @param bailoutAccount Account that bailout the penalty account\n     * @param bailoutAmount Amount of account bailout\n     *\n     * NOTE:\n     *\n     * [DEPRECATED] Use AgreementLiquidatedV2 instead\n     */\n    event Bailout(address indexed bailoutAccount, uint256 bailoutAmount);\n\n    /**\n     * @dev Agreement liquidation event (DEPRECATED BY AgreementLiquidatedV2)\n     * @param liquidatorAccount Account of the agent that performed the liquidation.\n     * @param agreementClass Contract address of the agreement\n     * @param id Agreement ID\n     * @param penaltyAccount Account of the agreement to be penalized\n     * @param bondAccount Account that collect the reward or bailout accounts\n     * @param rewardAmount Amount of liquidation reward\n     * @param bailoutAmount Amount of liquidation bailouot\n     *\n     * NOTE:\n     * Reward account rule:\n     * - if bailout is equal to 0, then\n     *   - the bondAccount will get the rewardAmount,\n     *   - the penaltyAccount will pay for the rewardAmount.\n     * - if bailout is larger than 0, then\n     *   - the liquidatorAccount will get the rewardAmouont,\n     *   - the bondAccount will pay for both the rewardAmount and bailoutAmount,\n     *   - the penaltyAccount will pay for the rewardAmount while get the bailoutAmount.\n     */\n    event AgreementLiquidatedBy(\n        address liquidatorAccount,\n        address indexed agreementClass,\n        bytes32 id,\n        address indexed penaltyAccount,\n        address indexed bondAccount,\n        uint256 rewardAmount,\n        uint256 bailoutAmount\n    );\n}\n",
  "sourceMap": "",
  "sourcePath": "/home/phydy/.brownie/packages/phydy/sf-brownie@1.0.0/interfaces/superfluid/ISuperfluidToken.sol",
  "type": "interface"
}